standard_error(70)
standard_error(70)
standard_error(70)
standard_error(70)
standard_error(70)
standard_error(70)
standard_error(70)
standard_error(70)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(90)
standard_error(100)
standard_error(200)
standard_error(200)
standard_error(300)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(400)
standard_error(4000)
standard_error(4000)
standard_error(40000)
standard_error(40000)
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 1
arr <- 0 # this array will be storing all the mean of the random values generated 
while(i <= 1000)
{
abline(v=w<-(mean(runif(10,min=1,max=100))),lwd=2,col="blue")
arr <- c(arr,w)
i <- i + 1
}
# here we will abserve the blue lines covering the region nearby mean
arr <- arr[2:length(arr)]
standard_dev <- sd(arr)
print("the standard deviation is  ")
print(standard_dev)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(100)
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 1
arr <- 0 # this array will be storing all the mean of the random values generated 
#while(i <= 1000)
{
abline(v=w<-sd(apply(matrix(runif(no_samples*1000),1000),1,mean)),lwd=2,col="blue")
i <- i + 1
}
# here we will abserve the blue lines covering the region nearby mean
arr <- arr[2:length(arr)]
standard_dev <- sd(arr)
print("the standard deviation is  ")
print(w)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(30)
standard_error(40)
standard_error(70)
standard_error(70)
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 1
arr <- 0 # this array will be storing all the mean of the random values generated 
#while(i <= 1000)
{
abline(v=w<-sd(apply(matrix(runif(no_samples*1000,min=1,max=100),1000),1,mean)),lwd=2,col="blue")
i <- i + 1
}
# here we will abserve the blue lines covering the region nearby mean
arr <- arr[2:length(arr)]
standard_dev <- sd(arr)
print("the standard deviation is  ")
print(w)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(10)
standard_error(40)
standard_error(80)
standard_error(90)
standard_error(100)
standard_error(200)
standard_error(400)
v <- matrix(100,100)
v <- matrix(10,10)
v
v <- matrix(1,10)
v
v <- matrix(c(2,3),10)
v
v <- matrix(c(1:12,3),10)
v <- matrix(c(1:10,3),10)
v <- matrix(c(1:10),10)
v
v <- matrix(c(1:10)*10,10)
v
v <- matrix(c(1:100),10)
v
v <- matrix(c(1:100)-50,10)
v
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
abline(v=w<-sd(apply(matrix(w<-(runif(no_samples*1000,min=1),max=100)-mean(w),1000),1,mean)),lwd=2,col="blue")
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(w)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),type="l",lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard deviation<- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),type="l",lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(30)
warning()
a
sw <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),type="l",lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),type="l",lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
}
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
w <- runif(30,min=1,max=100)
w_mean <- w - mean(w)
w_mean
abline(v=mean(w_mean),col="blue",lwd=2)
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(30)
standard_error(40)
sd
sd(apply(matrix(runif(10*1000),1000),1,mean))
1/sqrt(12*10)
standard_error(10)
standard_error(10)standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(12*no_samples))
}
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
w_mean <- w - mean(w)
abline(v=mean(w_mean),lwd=2,col="blue")
arr <- c(arr,mean(w_mean))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(12*no_samples))
}
standard_error(10)
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
abline(v=mean(w),lwd=2,col="blue")
arr <- c(arr,mean(w))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(12*no_samples))
}
standard_error(30)
standard_error(40)
standard_error(60)
standard_error(90)
standard_error(1110)
standard_error(1110)standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 100)
{
w <- runif(no_samples,min=1,max=100)
abline(v=mean(w),lwd=2,col="blue")
arr <- c(arr,mean(w))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 100)
{
w <- runif(no_samples,min=1,max=100)
abline(v=mean(w),lwd=2,col="blue")
arr <- c(arr,mean(w))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(20)
# bais-variance ZxcsacsaCSACSACSA
assdsdsadasd
q()
getwd()
q <- getwd()
q
list.files()
Rscript b-v-trdoff.R
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
SAMPLE_var <- ((w-mean(w))*(w-mean(w)))/(no_samples-1)
#abline(v=mean(w),lwd=2,col="blue")
arr <- c(arr,sqrt(SAMPLE_var))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(20)
# the function will explain step-by-step procedure of bias-variance trade-off
standard_error <- function(number_of_samples)
{
# let us frst plot a bell curve with mean=50 and sd = 10 
x <- seq(1,100,length=100)
y <- dnorm(x,mean=50,sd=10)
plot(x,y,type="l",lwd=3,xlab="random variable",ylab="distribution",main="normal distribution",col="red")
#sampling from the above curve
# so we plan to take 1000 such samples each with size = parameter AND plot them
# we will further increase the size of this samples we take, to demostrate the 
# bais-variance 
no_samples <- number_of_samples
i <- 0
arr <- 0 
while(i <= 1000)
{
w <- runif(no_samples,min=1,max=100)
SAMPLE_var <- ((w-mean(w))*(w-mean(w)))/(no_samples-1)
abline(v=mean(w),lwd=2,col="blue")
arr <- c(arr,sqrt(SAMPLE_var))
i <- i + 1
}
arr <- arr[2:length(arr)]
standard_deviation <- sd(arr)
# here we will abserve the blue lines covering the region nearby mean
print("the standard deviation is  ")
print(standard_deviation)
print("the original average sd")
print(10/sqrt(no_samples))
}
standard_error(29)
q()
